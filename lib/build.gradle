/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5-rc-1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        name "DynamoDB Local Release Repository"
        url "https://s3-us-west-2.amazonaws.com/dynamodb-local/release"
    }
}

version = '1.0'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

//create a single Jar with all dependencies
task buildStandAlone(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'Gradle Jar File',  
        	'Implementation-Version': archiveVersion,
        	'Main-Class': 'main.Main'
    }
    archiveBaseName = project.name + '-main'
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task buildLambda(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'Gradle Jar File',  
        	'Implementation-Version': archiveVersion,
        	'Main-Class': 'aws_lambda.Handler'
    }
    archiveBaseName = project.name + '-lambda'
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.0.1-jre'

    // AWS Java 2.x
	implementation platform('software.amazon.awssdk:bom:2.17.230')
 	implementation 'software.amazon.awssdk:dynamodb'
 	implementation 'software.amazon.awssdk:s3'
	implementation group: 'com.amazonaws', name: 'aws-lambda-java-core', version: '1.2.1'

	// for local DynamoDB
	testImplementation group: 'com.amazonaws', name: 'DynamoDBLocal', version: '1.16.0'
	testImplementation group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb', version: '1.12.286'
	

	// https://mvnrepository.com/artifact/org.slf4j/slf4j-api
	// SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
	implementation 'org.slf4j:slf4j-api:1.7.36'
	
	// https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
	implementation 'org.slf4j:slf4j-jdk14:1.7.36'
	
	// YAML
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310
	implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.13.3'
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml
	implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.13.3'
}

test {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
